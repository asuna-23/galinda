// movie
from flask_sqlalchemy import SQLAlchemy

db = SQLAlchemy()

class Movie(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    title = db.Column(db.String(100), nullable=False)
    watched = db.Column(db.Boolean, default=False)


// app.py

from flask import Flask, request, jsonify
from flask_cors import CORS
from models import db, Movie
from config import Config

app = Flask(__name__)
app.config.from_object(Config)
db.init_app(app)
CORS(app)

@app.route('/api/movies', methods=['GET', 'POST'])
def movies():
    if request.method == 'GET':
        movies = Movie.query.all()
        return jsonify([{'id': movie.id, 'title': movie.title, 'watched': movie.watched} for movie in movies])

    if request.method == 'POST':
        data = request.get_json()
        new_movie = Movie(title=data['title'], watched=data['watched'])
        db.session.add(new_movie)
        db.session.commit()
        return jsonify({'id': new_movie.id, 'title': new_movie.title, 'watched': new_movie.watched}), 201

@app.route('/api/movies/<int:id>', methods=['PUT', 'DELETE'])
def update_delete_movie(id):
    movie = Movie.query.get_or_404(id)

    if request.method == 'PUT':
        data = request.get_json()
        movie.watched = data['watched']
        db.session.commit()
        return jsonify({'id': movie.id, 'title': movie.title, 'watched': movie.watched})

    if request.method == 'DELETE':
        db.session.delete(movie)
        db.session.commit()
        return '', 204

if __name__ == '__main__':
    app.run(debug=True)
